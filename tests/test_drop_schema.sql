-- The following CREATE SCHEMA will fail if QUUX already exists. We rely on
-- this to avoid clobbering any existing user schema of the same name
CREATE SCHEMA QUUX!
SET SCHEMA QUUX!

CREATE TABLE FOO (ID INTEGER NOT NULL PRIMARY KEY, VALUE INTEGER NOT NULL)!

CREATE TABLE BAR (ID INTEGER NOT NULL PRIMARY KEY, FOO_ID INTEGER REFERENCES FOO(ID))!

CREATE ALIAS BAZ FOR BAR!

CREATE VIEW QUUX AS SELECT FOO.ID AS FOO_ID, BAR.ID AS BAR_ID FROM FOO JOIN BAR ON FOO.ID = BAR.FOO_ID!

CREATE TRIGGER FOO_UPDATE
    AFTER UPDATE ON FOO
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
BEGIN
    IF NEW.VALUE = NEW.ID THEN
        SIGNAL SQLSTATE '80000';
    END IF;
END!

CREATE FUNCTION BAZ_QUERY(A_ID INTEGER)
    RETURNS TABLE (BAZ_ID INTEGER, FOO_ID INTEGER)
    READS SQL DATA
    NO EXTERNAL ACTION
RETURN
    SELECT * FROM BAZ WHERE ID = A_ID!

CREATE PROCEDURE NEW_FOO (ID INTEGER, VALUE INTEGER)
    MODIFIES SQL DATA
    NO EXTERNAL ACTION
BEGIN
    INSERT INTO FOO (ID, VALUE) VALUES (ID, VALUE);
END!

CALL DROP_SCHEMA('QUUX')!

VALUES ASSERT_EQUALS(0, (SELECT COUNT(*) FROM SYSCAT.SCHEMATA WHERE SCHEMANAME = 'QUUX'))!
