CREATE TABLE FOO (
	ID INTEGER NOT NULL PRIMARY KEY,
	VALUE INTEGER NOT NULL
)!

CALL CREATE_EXCEPTION_TABLE('FOO')!
CALL CREATE_EXCEPTION_VIEW('FOO_EXCEPTIONS')!

VALUES ASSERT_TABLE_EXISTS('FOO_EXCEPTIONS')!
VALUES ASSERT_EQUALS(4, (SELECT COUNT(*) FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS'))!
VALUES ASSERT_EQUALS('ID',         (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS' AND COLNO = 0))!
VALUES ASSERT_EQUALS('VALUE',      (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS' AND COLNO = 1))!
VALUES ASSERT_EQUALS('EXCEPT_TS',  (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS' AND COLNO = 2))!
VALUES ASSERT_EQUALS('EXCEPT_MSG', (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS' AND COLNO = 3))!

VALUES ASSERT_TABLE_EXISTS('FOO_EXCEPTIONS_V')!
VALUES ASSERT_EQUALS(5, (SELECT COUNT(*) FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V'))!
VALUES ASSERT_EQUALS('ID',            (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V' AND COLNO = 0))!
VALUES ASSERT_EQUALS('VALUE',         (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V' AND COLNO = 1))!
VALUES ASSERT_EQUALS('EXCEPT_TYPE',   (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V' AND COLNO = 2))!
VALUES ASSERT_EQUALS('EXCEPT_OBJECT', (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V' AND COLNO = 3))!
VALUES ASSERT_EQUALS('EXCEPT_TS',     (SELECT COLNAME FROM SYSCAT.COLUMNS WHERE TABSCHEMA = CURRENT SCHEMA AND TABNAME = 'FOO_EXCEPTIONS_V' AND COLNO = 4))!
-- XXX Check validity of EXCEPT_MSG conversion

DROP VIEW FOO_EXCEPTIONS_V!
DROP TABLE FOO_EXCEPTIONS!
DROP TABLE FOO!
